{"version":3,"sources":["components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Search","className","type","value","this","props","onChange","handleChange","Component","App","sortUsers","categorya","categoryb","displayedUsers","state","users","sort","a","b","setState","filterNames","filter","user","name","first","toLowerCase","includes","bind","fetch","then","res","json","results","event","target","Table","striped","bordered","hover","onClick","map","last","location","country","login","username","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAkBeA,E,4JAdb,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wCACA,uBACEC,KAAK,OACLC,MAAQC,KAAKC,MAAMF,MACnBG,SAAUF,KAAKC,MAAME,sB,GATVC,aCqFNC,E,kDAjFb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAqBRK,UAAY,SAACC,EAAWC,GACtB,IAAMC,EAAiB,EAAKC,MAAMC,MAAMC,MAAK,SAACC,EAAGC,GAAJ,OAC3CD,EAAEN,GAAWC,GAAaM,EAAEP,GAAWC,GAAa,GAAK,KAE3D,EAAKO,SAAS,CAAEN,oBA1BC,EA6BnBO,YAAc,WACZ,IAAMP,EAAiB,EAAKC,MAAMC,MAAMM,QAAO,SAACC,GAAD,OAC7CA,EAAKC,KAAKC,MAAMC,cAAcC,SAAS,EAAKZ,MAAMX,MAAMsB,kBAE1D,EAAKN,SAAS,CAAEN,oBA/BhB,EAAKC,MAAQ,CACXC,MAAO,GACPF,eAAgB,GAChBV,MAAO,IAET,EAAKI,aAAe,EAAKA,aAAaoB,KAAlB,gBACpB,EAAKP,YAAc,EAAKA,YAAYO,KAAjB,gBARF,E,qDAWnB,WAAqB,IAAD,OAClBC,MAAM,yCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKb,SAAS,CACZJ,MAAOiB,EAAQA,QACfnB,eAAgBmB,EAAQA,e,0BAmBhC,SAAaC,GAAQ,IAAD,OAClB7B,KAAKe,SAAS,CAAEhB,MAAO8B,EAAMC,OAAO/B,QAAS,WAC3C,EAAKiB,mB,oBAIT,WAAU,IAAD,OACP,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQE,MAAOC,KAAKU,MAAMX,MAAOI,aAAcH,KAAKG,eACpD,eAAC4B,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIC,QAAS,kBAAM,EAAK7B,UAAU,OAAQ,UAA1C,0BAGA,oBAAI6B,QAAS,kBAAM,EAAK7B,UAAU,OAAQ,SAA1C,yBAGA,oBAAI6B,QAAS,kBAAM,EAAK7B,UAAU,WAAY,YAA9C,4BAGA,0CACA,4CAGJ,gCACGN,KAAKU,MAAMD,eAAe2B,KAAI,SAAClB,GAC9B,OACE,+BACE,6BAAKA,EAAKC,KAAKC,QACf,6BAAKF,EAAKC,KAAKkB,OACf,6BAAKnB,EAAKoB,SAASC,UACnB,6BAAKrB,EAAKsB,MAAMC,WAChB,6BAAKvB,EAAKwB,0B,GAvEVtC,aCOHuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.241bf955.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Search</h2>\r\n        <input\r\n          type=\"text\"\r\n          value= {this.props.value}\r\n          onChange={this.props.handleChange}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayedUsers: [],\n      value: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.filterNames = this.filterNames.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://randomuser.me/api/?results=50\")\n      .then((res) => res.json())\n      .then((results) => {\n        this.setState({\n          users: results.results,\n          displayedUsers: results.results,\n        });\n      });\n  }\n\n  sortUsers = (categorya, categoryb) => {\n    const displayedUsers = this.state.users.sort((a, b) =>\n      a[categorya][categoryb] > b[categorya][categoryb] ? 1 : -1\n    );\n    this.setState({ displayedUsers });\n  };\n\n  filterNames = () => {\n    const displayedUsers = this.state.users.filter((user) =>\n      user.name.first.toLowerCase().includes(this.state.value.toLowerCase())\n    );\n    this.setState({ displayedUsers });\n  };\n\n  handleChange(event) {\n    this.setState({ value: event.target.value }, () => {\n      this.filterNames();\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search value={this.state.value} handleChange={this.handleChange} />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th onClick={() => this.sortUsers(\"name\", \"first\")}>\n                First (sort)\n              </th>\n              <th onClick={() => this.sortUsers(\"name\", \"last\")}>\n                Last (sort)\n              </th>\n              <th onClick={() => this.sortUsers(\"location\", \"country\")}>\n                Country (sort)\n              </th>\n              <th>Username</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.displayedUsers.map((user) => {\n              return (\n                <tr>\n                  <td>{user.name.first}</td>\n                  <td>{user.name.last}</td>\n                  <td>{user.location.country}</td>\n                  <td>{user.login.username}</td>\n                  <td>{user.email}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}